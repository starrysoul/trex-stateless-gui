apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'application'

group = 'com.exalttech'
version = '4.3-SNAPSHOT'

description = """TRex Stateless GUI Application"""

mainClassName='com.exalttech.trex.application.TrexApp'
if (!hasProperty('mainClass')) {
    ext.mainClass = mainClassName
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {  
     if (!project.hasProperty('local')) {
         maven { url "https://jitpack.io" }
     }
     /*
     maven { url "http://repo.maven.apache.org/maven2" }
     mavenLocal()
     */
    mavenCentral()
}

sourceSets {
    uiTest {
        compileClasspath = sourceSets.main.output + configurations.testRuntime
        runtimeClasspath = output + sourceSets.main.output + configurations.testRuntime

        java {
            srcDirs = ['src/ui-test/java']
        }
        resources.srcDirs = ["src/ui-test/resources"]
    }
}

test {
    testLogging {
        events "passed", "skipped" , "failed"
    }
}

task uiTest(type: Test) {
    description 'Runs UI testing(E2E)'
    outputs.upToDateWhen { false }
    testClassesDirs = sourceSets.uiTest.output.classesDirs
    classpath = sourceSets.uiTest.runtimeClasspath

    testLogging {
        events "passed", "skipped", "failed"
        exceptionFormat "full"
    }

    if (project.hasProperty('headless')) {
        // for running JavaFX tests headless using Monocle
        jvmArgs "-Dheadless=true"
    }

    systemProperty "test", "true"
}

dependencies {

    compile project(':trex-packet-editor')
    compile project(':trex-java-sdk')
    compile group: 'org.pcap4j', name: 'pcap4j-core', version:'1.7.7'
    compile group: 'org.pcap4j', name: 'pcap4j-packetfactory-static', version:'1.7.7'
    compile group: 'com.aquafx-project', name: 'aquafx', version:'0.1'
    compile group: 'com.guigarage', name: 'flatter', version:'0.7'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version:'2.6.0'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version:'2.6.0'
    compile group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-yaml', version:'2.5.4'
    compile group: 'org.json', name: 'json', version:'20150729'
    compile group: 'org.zeromq', name: 'jeromq', version:'0.5.1'
    compile group: 'commons-io', name: 'commons-io', version:'2.4'
    compile group: 'commons-lang', name: 'commons-lang', version:'2.4'
    compile group: 'com.google.code.gson', name: 'gson', version:'2.7'
    compile(group: 'log4j', name: 'log4j', version:'1.2.17') {
        exclude(module: 'mail')
        exclude(module: 'jms')
        exclude(module: 'jmxtools')
        exclude(module: 'jmxri')
    }
    compile group: 'org.jfxtras', name: 'jfxtras-labs', version:'8.0-r4'
    compile group: 'commons-codec', name: 'commons-codec', version:'1.9'
    compile group: 'org.testng', name: 'testng', version:'6.9.10'
    compile group: 'net.java.dev.jna', name: 'jna', version: '4.4.0'
    compile group: 'net.java.dev.jna', name: 'jna-platform', version: '4.4.0'
    compile group: 'com.github.arteam', name: 'simple-json-rpc-client', version: '0.9'
    compile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.6'

    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile "org.testfx:testfx-core:4.0.+"
    testCompile "org.testfx:testfx-junit:4.0.+"
    testRuntime "org.testfx:openjfx-monocle:1.8.0_20"
    testCompile "org.mockito:mockito-core:2.7.9"
}

apply plugin: 'javafx-gradle-plugin'

buildscript {
    dependencies {
        classpath group: 'de.dynamicfiles.projects.gradle.plugins', name: 'javafx-gradle-plugin', version: '8.+'
    }
    repositories {
        mavenLocal()
        mavenCentral()

    }
}
import org.apache.tools.ant.taskdefs.condition.Os;
jfx {
    verbose = true
    mainClass = mainClassName
    jfxMainAppJarName = "trex-stateless-gui.jar"
    appName = "trex-stateless-gui"
    nativeReleaseVersion = version
    additionalAppResources = Os.isFamily(Os.FAMILY_WINDOWS)? "src/main/resources/win32-x86-64" : null
    vendor = 'Xored'
}

processResources {
    filesMatching("**/version.properties") {
        expand('version': version)
    }
}
